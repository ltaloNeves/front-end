*{margin: 0;}




    /**backgroun repeat: repeat-x or y
    para repetir no eixo x ou y
    
    mudar a posicão da imagem
    background-position : center;  
       mudar o tamanho da imagem

    background-size: ;




    para mudar a relção da imagem fazer ela se mexer ou não em relação ao site
    background-attachment: fixed;



        border: 2px black;
    background-image: url(https://pt.wikipedia.org/wiki/Ficheiro:Antarctica_blue_white_blue.jpg);*/

 


    





/* 
definir um fundo, todo elemento tem por padrão ser tranparent
*/

/*
position serve para mudar o local da caixa

podendo ser 
relative : relativo ao fluxo do posicionamento podendo controlar ele
static
absolute 
fixed : deixar o elemento fixo na pagina


fexblox: posicionar os elementos dentro da caixa,
controlar em uma dimensão horizontal ou vestical
alinhamento, direcionamento, ordernar e tamanhos

aplicando display: flex;

*/
/*
mudar o tamanhon da pagina com 
body{
   height: 100vh;
   margin: 0;
   dispaly: flex;
   align-items center (alinhar os itens)
.container{
   display: flex;
   justify-content: center;
}
.box{
   width: 50px;
   height: 50px;
   margin-bottom: 8px;
}

.blue{
   background-color: blue;
}
.red{
   background-color: red;
}
.green{
   background-color: green;
}
*/
/*
grid: posicionamento dos elementos dentro da caixa
horizontal e vestical ao mesmo tempo
pode ser flexivel ou fixo
criar espaços para os elementos filhos habitarem


para alinhar um texto no meio da pagina eu posso usar o display: flex; dentro do grid

usando 
display: flex;
justify-content: space-between;
align-items: center;

body{
 background: linear-gradient(90deg, #FFD700, #FFA500, #FF8C00, #FF4500 );





   margin: 0;
   height: 100vh;
   display: grid;
   grid-template-areas:
   "header header"
   "main aside"
   "footer footer";
   grid-template-rows:
   30px 1fr 40px
   
   
   ;

   grid-template-columns: 1fr 80px;
}
header{
   grid-area: header;
   background-color: green;

}
main{
   grid-area: main;
   background-color: red;

}
aside{
   grid-area: aside;
   background-color: blue;

}
footer{
   grid-area: footer;
   background-color: grey;

}
*/

/*
FONTES
font-family

font-weight- peso da fonte
font-style: estilo da fonte
font-side: tamanho da fonte px ou em

web-fonts

podendo ser usado o 
@import
@font-face
link (maneira mais facil]) colocando o link no head do html
e aplicando a font-family no css


text-align: usado para alinhar o texto

*/

